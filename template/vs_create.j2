#jinja2: lstrip_blocks: True

set_fact:
  {% if app_type == "http" %}
    {% set network_prof = "System-TCP-Proxy" %}
    {% set app_profile = "System-HTTP" %}
    {% set frontend_ssl = 0 %}
    {% set backend_ssl = 0 %}
  {% elif app_type == "https_proxy" %}
    {% set network_prof = "System-TCP-Proxy" %}
    {% set app_profile = "System-Secure-HTTP" %}
    {% set frontend_ssl = 1 %}
    {% set backend_ssl = 1 %}
  {% elif app_type == "https_termination" %}
    {% set network_prof = "System-TCP-Proxy" %}
    {% set app_profile = "System-Secure-HTTP" %}
    {% set frontend_ssl = 1 %}
    {% set backend_ssl = 0 %}
  {% elif app_type == "tcp" %}
    {% set network_prof = "System-TCP-Proxy" %}
    {% set app_profile = "System-L4-Application" %}
    {% set frontend_ssl = 0 %}
    {% set backend_ssl = 0 %}
  {% else %}
    {% set network_prof = "System-TCP-Proxy" %}
    {% set app_profile = "System-L4-Application" %}
    {% set frontend_ssl = 0 %}
    {% set backend_ssl = 0 %}
  {% endif %}


  {% if health_monitor == "ping" %}
    {% set hm_prof = "System-Ping" %}
  {% elif health_monitor == "tcp" %}
    {% set hm_prof = "System-TCP" %}
  {% elif health_monitor == "http" %}
    {% set hm_prof = "System-HTTP" %}
  {% elif health_monitor == "https" %}
    {% set hm_prof = "System-HTTPS" %}
  {% else %}
    {% set hm_prof = "" %}
  {% endif %}

avi_config:
  {% if avi_config_state != "absent" %}

  pool:
    - api_version: "{{ api_version | default('18.2.8') }}"
      avi_config_state: present
      name: "{{ app_name }}-pool"
      cloud_ref: "/api/cloud?name={{ cloud_name | default('Default-Cloud') }}"
      tenant: "{{ tenant_name | default('admin') }}"
      tenant_ref: "/api/tenant?name={{ tenant_name | default('admin') }}"
      lb_algorithm: LB_ALGORITHM_ROUND_ROBIN
      default_server_port: "80"
      servers:
        {% if gslb == "Yes" and env == "ibm-" %}
          {% for poolm in pool_members %}
          {% set pm_details = poolm.split(',') %}
            {% if location == "dal" and pm_details[3] == "dallas" %}
        - ip:
           addr: "{{ pm_details[0] }}"
           type: 'V4'
           enabled: "{{ pm_details[2] }}"
          port: "{{ pm_details[1] }}"
            {% elif location == "lon" and pm_details[3] == "london" %}
        - ip:
           addr: "{{ pm_details[0] }}"
           type: 'V4'
           enabled: "{{ pm_details[2] }}"
          port: "{{ pm_details[1] }}"
            {% endif %}
          {% endfor %}
        {% else %}
          {% for poolm in pool_members %}
          {% set pm_details = poolm.split(',') %}
        - ip:
           addr: "{{ pm_details[0] }}"
           type: 'V4'
           enabled: "{{ pm_details[2] }}"
          port: "{{ pm_details[1] }}"
          {% endfor %}
        {% endif %}
      {% if backend_ssl == 1 %}
      sni_enabled: true
      ssl_profile_ref: "/api/sslprofile?name=System-Standard"
      {% endif %}
      {% if hm_prof != "" %}
      health_monitor_refs: "/api/healthmonitor?name={{ hm_prof }}"
      inline_health_monitor: true
      {% endif %}

  {% if env == "aws" %}
  vsvip:
    - name: "{{ app_name }}-vsvip"
      cloud_ref: "/api/cloud?name={{ cloud_name | default('Default-Cloud') }}"
      vip:
        - auto_allocate_ip: true
          auto_allocate_ip_type: V4_ONLY
          auto_allocate_floating_ip: true
          avi_allocated_fip: true
          avi_allocated_vip: true
          enabled: true
          subnet_uuid: "{{ aws_subnet }}"
          vip_id: '0'
  {% elif env == "ibm-dallas" %}
  vsvip:
    - name: "{{ app_name }}-vsvip"
      cloud_ref: "/api/cloud?name={{ cloud_name | default('Default-Cloud') }}"
      vip:
        - auto_allocate_ip: true
          auto_allocate_ip_type: V4_ONLY
          auto_allocate_floating_ip: false
          avi_allocated_fip: false
          avi_allocated_vip: false
          enabled: true
          vip_id: '0'
          ipam_network_subnet:
            network_ref: "/api/network?name={{ ibm_vip_network_name_dal }}"
            subnet:
              ip_addr:
                addr: "{{ ibm_vip_subnet_dal }}"
                type: V4
              mask: "{{ ibm_vip_mask_dal }}"
  {% elif env == "ibm-london" %}
  vsvip:
    - name: "{{ app_name }}-vsvip"
      cloud_ref: "/api/cloud?name={{ cloud_name | default('Default-Cloud') }}"
      vip:
        - auto_allocate_ip: true
          auto_allocate_ip_type: V4_ONLY
          auto_allocate_floating_ip: false
          avi_allocated_fip: false
          avi_allocated_vip: false
          enabled: true
          vip_id: '0'
          ipam_network_subnet:
            network_ref: "/api/network?name={{ ibm_vip_network_name_lon }}"
            subnet:
              ip_addr:
                addr: "{{ ibm_vip_subnet_lon }}"
                type: V4
              mask: "{{ ibm_vip_mask_lon }}"
  {% endif %}


  virtualservice:
    - api_version: "{{ api_version | default('18.2.8') }}"
      avi_config_state: present
      avi_api_update_method: patch
      avi_api_patch_op: replace
      name: "{{ app_name }}-vip"
      cloud_ref: "/api/cloud?name={{ cloud_name | default('Default-Cloud') }}"
      tenant: "{{ tenant_name | default('admin') }}"
      tenant_ref: "/api/tenant?name={{ tenant_name | default('admin') }}"
      pool_ref: "/api/pool?name={{ app_name }}-pool"
      vsvip_ref: "/api/vsvip?name={{ app_name }}-vsvip"
      network_profile_ref: "/api/networkprofile?name={{ network_prof }}"
      application_profile_ref: "/api/applicationprofile?name={{ app_profile }}"
      services:
        - port: "{{ listening_port | default('80') }}"
          {% if frontend_ssl == 1 %}
          enable_ssl: true
      ssl_key_and_certificate_refs: "/api/sslkeyandcertificate?name=System-Default-Cert"
      ssl_profile_ref: "/api/sslprofile?name=System-Standard"
          {% endif %}

  {%  endif %}